# Sync Telliot docs from https://github.com/tellor-io/telliot/tree/master/docs in telliot-documentation folder in the current repo
name: Sync Telliot docs

on: push
#  schedule: 
#  - cron: "0 0 * * *" # every 15 minutes. set to whatever interval you like


jobs:
  telliot-docs-synce:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: actions/setup-python@v2
        with:
          python-version: '2.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      # Runs a set of commands using the runners shell
      - name:  Sync
        run: |
          git clone https://github.com/hhio618/telliot -b arrange-docs
          export TELLIOT_MD5=$(find ./telliot/docs  -type f -exec md5sum {} \; | md5sum | cut -d" " -f1)
          export CURRENT_MD5=$(find $GITHUB_WORKSPACE/telliot-documentation -type f -exec md5sum {} \; | md5sum | cut -d" " -f1)
          if [ "$TELLIOT_MD5" != "$CURRENT_MD5" ];
          then 
            # Prepair remote SUMMARY.md file
            python .github/workflows/update-summary.py ./telliot/docs/
            # Let's update the content table
            rm -rf $GITHUB_WORKSPACE/telliot-documentation
            mv ./telliot/docs $GITHUB_WORKSPACE/telliot-documentation
          fi
      - name: Clean up before PR
        run: |
          rm -rf ./telliot
          rm -f SUMMARY.md.orig
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
